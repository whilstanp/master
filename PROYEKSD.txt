#include<iostream>
#include<stdlib.h>
#include<time.h>
#include<algorithm>
#include<stdio.h>
using namespace std;

struct node
{
	int data;                                                                             
	struct node *next;

};

class tumpukan
{
private:	
	struct node *top;
public:
	tumpukan() // constructure
	{
		top=NULL;
	}
	void push(int x)
	{
		struct node *ptr;
		ptr=new node;
		ptr->data=x;
		ptr->next=NULL;
		ptr->next=top;
		top=ptr;
	}

	int pop()
	{
		struct node *temp;
		if(top!=NULL)
		{
			temp=top;
			top=top->next;
			return temp->data;
			delete temp;
		}
	}

	void popAll()
	{
		for(int i = 0 ; i < 52 ; i++)
		{
			pop();
		}
	}

	
	void addCard()
	{
		int card[52]={1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13};
		srand(time(NULL));
		int xrand = rand() % 100+1;
		for(int i = 0 ; i < xrand ; i++)
		{
			std::random_shuffle(&card[0] , &card[52]);
		}
		for(int i = 0 ; i < 52 ; i ++)
		{
			push(card[i]);
		}
	}
};

class pemain
{
private:
	struct node *head  , *curr , *temp; 
public:
	pemain()
	{
		head = NULL;
		curr = NULL;
		temp = NULL;
	}

	void add(int x)
	{
		node *n = new node;
		n->data = x;
		n->next = NULL;

		if(head != NULL)
		{
			curr = head;
			while(curr->next != NULL)
			{
				curr = curr->next;
			}
			curr->next = n;

		}
		else
		{
			head = n;
		}
	}

	void delList()
	{
		while(head->next != NULL)
		{
			node* delptr;
			delptr = head;
			head = head ->next;
			delete delptr;
		}
		node* delptr;
		delptr = head;
		head = NULL;
		delete delptr;

	}

	void update(int x)
	{
		head->data = head->data + x;
	}

	int getTotal()
	{
		node * curr = head;
		return curr->data;

	}

	void show()
	{
		curr = head;
		while(curr != NULL)
		{
			cout<<"total = "<< curr->data << endl;
			curr = curr->next;
		}
	}

	int jumlah()
	{
		return head->data;
	}

	int converter(int x)
	{
		if (x == 1)
		{
			int pil;
			printf("Kartu = ACE\n");
			fflush(stdin);
			printf("1 or 11 (silahkan masukan angka pilihan)? \n");
			fflush(stdin);
			scanf("%d",&pil);
			fflush(stdin);
			if (pil == 1)
				return 1;
			else
				return 11;
		}
		else if(x == 2)
		{
			printf("Kartu = 2\n");
			return 2;
		}
		else if(x == 3)
		{
			printf("Kartu = 3\n");
			return 3;
		}
		else if(x == 4)
		{
			printf("Kartu = 4\n");
			return 4;
		}
		else if (x == 5)
		{
			printf("Kartu = 5\n");
			return 5;
		}
		else if (x == 6)
		{
			printf("Kartu = 6\n");
			return 6;
		}
		else if (x == 7)
		{
			printf("Kartu = 7\n");
			return 7;
		}
		else if (x == 8)
		{
			printf("Kartu = 8\n");
			return 8;
		}
		else if (x == 9)
		{
			printf("Kartu = 9\n");
			return 9;
		}
		else if (x == 10)
		{
			printf("Kartu = 10\n");
			return 10;
		}
		else if (x == 11)
		{
			printf("Kartu = JACK\n");
			return 10;
		}
		else if (x == 12)
		{
			printf("Kartu = QUEEN\n");
			return 10;
		}
		else if (x == 13)
		{
			printf("Kartu = KING\n");
			return 10;
		}

	}

	void pemenang(int x , int y)
	{
		if(x > 21 && y > 21 )
		{
			printf("Draw !!!\n");
		}
		else if (x <= 21 && y <= 21)
		{
			if(x > y)
			{
				printf("Player 1 Wins!\n");
			}
			else if(x == y)
			{
				printf("DRAW !\n");
			}
			else if(x < y)
			{
				printf("Player 2 Wins !\n");
			}
		}
		else if (x <= 21 && y >= 21)
		{
			printf("Player 1 Wins !\n");
		}
		else if (x >= 21 && y <= 21)
		{
			printf("Player 2 Wins !\n");
		}

	}

};





int main()
{

	tumpukan deck;
	pemain p1;
	pemain p2;
	pemain p3;
	pemain p4;
	pemain bot;
	int choice=0,pick=0;
	while(pick<3)
	{
		cout<<"1. BlackJack21"<<endl<<"2. SamGong"<<endl<<"3. Exit"<<endl;
		cin>>pick;
		if(pick == 1)
		{
			while(choice != 3)
			{
				
		
				printf("BLACKJACK 21\n");
				printf("1.SINGLE PLAYER\n");
				printf("2.MULTI PLAYER(2Player)\n");
				printf("3.EXIT\n");
				printf("Pilih ?\n");
				scanf("%d",&choice);
				if(choice == 1)
				{

					system("CLS");
					char pil = 'y';

					deck.addCard();
					p1.add(0);
					bot.add(0);
					int kartup;
					int kartub;
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					cout<<"Player bot = "<< bot.getTotal()<<endl;
						
					printf("Player 1 Turns\n");
					kartup = deck.pop();
					p1.update(p1.converter(kartup));
					kartup = deck.pop();
					p1.update(p1.converter(kartup));
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
							
					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					int flag=0;
					while( pil=='y' )
					{


						kartup = deck.pop();
						p1.update(p1.converter(kartup));
						if(p1.getTotal() > 21)
						{
							int proceed;
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;
							cin>>proceed;
							break;

						}
						cout<<"Player 1 = "<<p1.getTotal()<<endl;
						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
						
							break;
						}

					}
					system("CLS");

					printf("Player Bot Turns\n");
					while(bot.getTotal() < 15)
					{
						kartub = deck.pop();
						bot.update(bot.converter(kartub));
						
					}
					cout<<"Player bot = "<< bot.getTotal()<<endl;
					
					printf("\n");

					printf("Player 1 = %d " , p1.getTotal());
					printf("Player Bot = %d ", bot.getTotal());
					printf("\n");
					p1.pemenang(p1.getTotal() , bot.getTotal());
					printf("\n");
					p1.delList();
					bot.delList();
					deck.popAll();


				}
				else if(choice == 2)
				{
					system("CLS");
					deck.addCard();
					p1.add(0);
					p2.add(0);
					char pil = 'y';
					int kartup1;
					int kartup2;
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					cout<<"Player 2 =" <<p2.getTotal()<<endl;

					printf("Player 1 Turns\n");
					kartup1 = deck.pop();
					p1.update(p1.converter(kartup1));
					kartup1 = deck.pop();
					p1.update(p1.converter(kartup1));
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					while( pil=='y' )
					{


						kartup1 = deck.pop();
						p1.update(p1.converter(kartup1));
						if(p1.getTotal() > 21)
						{
							int proceed;
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;
							cin>>proceed;
							break;

						}
						cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 1 = %d "<<p1.getTotal()<<endl;
				
							break;
						}

					}

					system("CLS");
					printf("Player 2 Turns\n");
					kartup2 = deck.pop();
					p2.update(p2.converter(kartup2));
					kartup2 = deck.pop();
					p2.update(p2.converter(kartup2));
					cout<<"Player 2 " <<p2.getTotal()<<endl;

					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					while( pil=='y' )
					{


						kartup2 = deck.pop();
						p2.update(p2.converter(kartup2));
						if(p2.getTotal() > 21)
						{
							int proceed;
							cout<<"Player 2 " <<p2.getTotal()<<endl;

							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;
							cin>>proceed;
							break;

						}
						cout<<"Player 2 " <<p2.getTotal()<<endl;

						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 2 " <<p2.getTotal()<<endl;

							break;
						}

					}
					system("CLS");


					printf("Player 1 = %d ",p1.getTotal());
					printf("Player 2 = %d" ,p2.getTotal());

					printf("\n");
					p1.pemenang(p1.getTotal() , p2.getTotal());
					printf("\n");
					p1.delList();
					p2.delList();
					deck.popAll();



				}
			}

		}

		//SAMGONG
		 else if(pick == 2)
		{
			while(choice < 3)
			{
				printf("SAMGONG\n");
				printf("1.SINGLE PLAYER\n");
				printf("2.MULTI PLAYER(2Player)\n");
				printf("3.EXIT\n");
				printf("Pilih ?\n");
				scanf("%d",&choice);
				if(choice == 1)
				{

					system("CLS");
					char pil = 'y';

					deck.addCard();
					p1.add(0);
					bot.add(0);
					int kartup;
					int kartub;
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					cout<<"Player Bot =" <<bot.getTotal()<<endl;

					
					printf("Player 1 Turns\n");
					kartup = deck.pop();
					p1.update(p1.converter(kartup));
					kartup = deck.pop();
					p1.update(p1.converter(kartup));
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					int flag=0;
					while( pil=='y' )
					{


						kartup = deck.pop();
						p1.update(p1.converter(kartup));
						if(p1.getTotal() > 30)
						{
							
							int proceed;
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;
							cin>>proceed;
							break;

						}
						cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
							break;
						}

					}
					system("CLS");

					printf("Player Bot Turns\n");
					while(bot.getTotal() < 15)
					{
						kartub = deck.pop();
						bot.update(bot.converter(kartub));
					
					}
					
					printf("\n");

					printf("Player 1 = %d " , p1.getTotal());
					printf("Player Bot = %d ", bot.getTotal());
					printf("\n");
					p1.pemenang(p1.getTotal() , bot.getTotal());
					printf("\n");
					p1.delList();
					bot.delList();
					deck.popAll();


				}

				else if(choice == 2)
				{
					system("CLS");
					deck.addCard();
					p1.add(0);
					p2.add(0);
					char pil = 'y';
					int kartup1;
					int kartup2;
					cout<<"Player 1 = "<<p1.getTotal()<<endl;
					cout<<"Player 2 =" <<p2.getTotal()<<endl;

					printf("Player 1 Turns\n");
					kartup1 = deck.pop();
					p1.update(p1.converter(kartup1));
					kartup1 = deck.pop();
					p1.update(p1.converter(kartup1));
					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					while( pil=='y' )
					{


						kartup1 = deck.pop();
						p1.update(p1.converter(kartup1));
						if(p1.getTotal() > 21)
						{
							int proceed;
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;
							cin>>proceed;
							break;

						}
						cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 1 = "<<p1.getTotal()<<endl;
					
							break;
						}

					}

					system("CLS");
					printf("Player 2 Turns\n");
					kartup2 = deck.pop();
					p2.update(p2.converter(kartup2));
					kartup2 = deck.pop();
					p2.update(p2.converter(kartup2));
					printf("Ambil kartu lagi ? \n");
					fflush(stdin);
					scanf("%c",&pil);
					while( pil=='y' )
					{
						kartup2 = deck.pop();
						p2.update(p2.converter(kartup2));
						if(p2.getTotal() > 21)
						{
							int proceed;
							cout<<"Player 2 =" <<p2.getTotal()<<endl;

							cout<<"HANGUS !"<<endl;
							cout<<"tekan 1 untuk melanjutkan"<<endl;cin>>proceed;
							break;
						}
						cout<<"Player 2 =" <<p2.getTotal()<<endl;

						printf("Ambil kartu lagi ? \n");
						fflush(stdin);
						scanf("%c",&pil);
						if(pil == 'n')
						{
							cout<<"Player 2 =" <<p2.getTotal()<<endl;

							break;
						}

					}
					system("CLS");

					printf("Player 1 = %d ",p1.getTotal());
					printf("Player 2 = %d" ,p2.getTotal());

					printf("\n");
					p1.pemenang(p1.getTotal() , p2.getTotal());
					printf("\n");
					p1.delList();
					p2.delList();
					deck.popAll();
				}
			}
		}
	}
	return 0;
}
















